{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../tasks.service\";\nimport * as i2 from \"src/app/auth/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/expansion\";\nimport * as i5 from \"@angular/material/paginator\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/router\";\n\nfunction ListComponent_mat_spinner_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nconst _c0 = function (a1) {\n  return [\"/edit\", a1];\n};\n\nfunction ListComponent_mat_expansion_panel_2_mat_action_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-action-row\");\n    i0.ɵɵelementStart(1, \"button\", 8);\n    i0.ɵɵtext(2, \"EDIT\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ListComponent_mat_expansion_panel_2_mat_action_row_8_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const task_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onDelete(task_r3._id);\n    });\n    i0.ɵɵtext(4, \"DELETE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(1, _c0, task_r3._id));\n  }\n}\n\nfunction ListComponent_mat_expansion_panel_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-expansion-panel\", 5);\n    i0.ɵɵelementStart(1, \"mat-expansion-panel-header\");\n    i0.ɵɵelementStart(2, \"mat-panel-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 6);\n    i0.ɵɵelement(5, \"img\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, ListComponent_mat_expansion_panel_2_mat_action_row_8_Template, 5, 3, \"mat-action-row\", 0);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", task_r3.title, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", task_r3.imagePath, i0.ɵɵsanitizeUrl)(\"alt\", task_r3.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r3.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.userIsAuthenticated && task_r3.creator === ctx_r1.userId);\n  }\n}\n\nfunction ListComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 10);\n    i0.ɵɵtext(1, \"No task available\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    constructor(tasksService, authService) {\n      this.tasksService = tasksService;\n      this.authService = authService;\n      this.storedTasks = [];\n      this.isLoading = false;\n      this.totalTasks = 0;\n      this.pageIndex = 0;\n      this.pageSize = 10;\n      this.pageSizeOptions = [1, 5, 10, 100];\n      this.userId = null;\n      this.userIsAuthenticated = false;\n    }\n\n    ngOnInit() {\n      this.tasksService.getTasks(this.pageSize, this.pageIndex);\n      this.isLoading = true;\n      this.tasksSub = this.tasksService.getTaskUpdateListner().subscribe(taskData => {\n        this.isLoading = false;\n        this.storedTasks = taskData.tasks;\n        this.totalTasks = taskData.totalCount;\n      });\n      this.userIsAuthenticated = this.authService.getAuthStatus();\n      this.userId = this.authService.getUserId();\n      this.authListenerSubs = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n        this.userId = this.authService.getUserId();\n      });\n    }\n\n    onChangePage(event) {\n      console.log(event);\n      this.pageSize = event.pageSize;\n      this.pageIndex = event.pageIndex;\n      this.tasksService.getTasks(this.pageSize, this.pageIndex);\n    }\n\n    onDelete(id) {\n      this.tasksService.deleteTask(id).subscribe(r => {\n        this.tasksService.getTasks(this.pageSize, this.pageIndex);\n      });\n    }\n\n    ngOnDestroy() {\n      this.tasksSub.unsubscribe();\n      this.authListenerSubs.unsubscribe();\n    }\n\n  }\n\n  ListComponent.ɵfac = function ListComponent_Factory(t) {\n    return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n\n  ListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListComponent,\n    selectors: [[\"app-task-list\"]],\n    decls: 5,\n    vars: 6,\n    consts: [[4, \"ngIf\"], [\"multi\", \"true\"], [\"hideToggle\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"aria-label\", \"Select page\", 3, \"length\", \"pageSize\", \"pageSizeOptions\", \"page\"], [\"class\", \"info-text mat-panel-title\", 4, \"ngIf\"], [\"hideToggle\", \"\"], [1, \"task-image\"], [3, \"src\", \"alt\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"routerLink\"], [\"mat-button\", \"\", \"color\", \"warning\", 3, \"click\"], [1, \"info-text\", \"mat-panel-title\"]],\n    template: function ListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ListComponent_mat_spinner_0_Template, 1, 0, \"mat-spinner\", 0);\n        i0.ɵɵelementStart(1, \"mat-accordion\", 1);\n        i0.ɵɵtemplate(2, ListComponent_mat_expansion_panel_2_Template, 9, 5, \"mat-expansion-panel\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-paginator\", 3);\n        i0.ɵɵlistener(\"page\", function ListComponent_Template_mat_paginator_page_3_listener($event) {\n          return ctx.onChangePage($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, ListComponent_p_4_Template, 2, 0, \"p\", 4);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.storedTasks);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"length\", ctx.totalTasks)(\"pageSize\", ctx.pageSize)(\"pageSizeOptions\", ctx.pageSizeOptions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.storedTasks == null ? null : ctx.storedTasks.length) <= 0 && !ctx.isLoading);\n      }\n    },\n    directives: [i3.NgIf, i4.MatAccordion, i3.NgForOf, i5.MatPaginator, i6.MatSpinner, i4.MatExpansionPanel, i4.MatExpansionPanelHeader, i4.MatExpansionPanelTitle, i4.MatExpansionPanelActionRow, i7.MatButton, i8.RouterLink],\n    styles: [\"[_nghost-%COMP%]{display:block;margin-top:1rem}mat-spinner[_ngcontent-%COMP%]{margin:auto}.info-text[_ngcontent-%COMP%]{text-align:center}.task-image[_ngcontent-%COMP%]{width:100%}.task-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100;box-shadow:1px 1px 5px #00000080}\"]\n  });\n  return ListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}