{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nconst API_BASE_URL = environment.apiUrl + 'tasks/';\nexport let TasksService = /*#__PURE__*/(() => {\n  class TasksService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.tasks = [];\n      this.tasksUpdated = new Subject();\n    }\n\n    getTasks(taskPerPage, currentPage) {\n      let url = API_BASE_URL; // return [...this.tasks];\n\n      if (taskPerPage && currentPage > -1) {\n        url += `?pagesize=${taskPerPage}&currentpage=${currentPage}`;\n      }\n\n      this.http.get(url).subscribe(taskData => {\n        this.tasks = taskData.data;\n        this.tasksUpdated.next({\n          tasks: [...this.tasks],\n          totalCount: taskData.totalCount\n        });\n      });\n    }\n\n    getTask(id) {\n      return this.http.get(API_BASE_URL + id); // return {...this.tasks.find(task => task._id ==id)};\n    }\n\n    updateTask(task) {\n      let taskData = null;\n\n      if (typeof task.imagePath == 'string') {\n        taskData = task;\n      } else {\n        taskData = new FormData();\n        taskData.append(\"_id\", task._id);\n        taskData.append(\"title\", task.title);\n        taskData.append(\"description\", task.description);\n        taskData.append('image', task.imagePath, task.title);\n      }\n\n      this.http.put(API_BASE_URL + task._id, taskData).subscribe(resp => {\n        // console.log(resp);\n        // let index = this.tasks.findIndex(t => t._id == task._id);\n        // if(index > -1){\n        //     this.tasks[index] = task;\n        //     this.tasksUpdated.next([...this.tasks]);\n        // }\n        this.router.navigate(['/']);\n      });\n    }\n\n    getTaskUpdateListner() {\n      return this.tasksUpdated.asObservable();\n    }\n\n    addTask(task, image) {\n      const taskData = new FormData();\n      taskData.append(\"title\", task.title);\n      taskData.append(\"description\", task.description);\n      taskData.append('image', image, task.title);\n      this.http.post(API_BASE_URL, taskData).subscribe(resp => {\n        console.log(resp); // this.tasks.push(resp.data);\n        // this.tasksUpdated.next([...this.tasks]);\n\n        this.router.navigate(['/']);\n      });\n    }\n\n    deleteTask(id) {\n      return this.http.delete(API_BASE_URL + id);\n    }\n\n  }\n\n  TasksService.ɵfac = function TasksService_Factory(t) {\n    return new (t || TasksService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  TasksService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TasksService,\n    factory: TasksService.ɵfac,\n    providedIn: 'root'\n  });\n  return TasksService;\n})();","map":null,"metadata":{},"sourceType":"module"}